# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1OLDV_6neNjL-eiRSgjNwWn4SBtRiEPDb
"""

import numpy as np
import matplotlib.pyplot as plt
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense

# 生成訓練資料
x = np.linspace(-1, 1, 200).reshape(-1,1)
y = 1 / (1 + 25 * x**2)

# 訓練/驗證分割
split = int(0.8 * len(x))
x_train, x_val = x[:split], x[split:]
y_train, y_val = y[:split], y[split:]

# 建立模型
model = Sequential([
    Dense(20, input_dim=1, activation='tanh'),
    Dense(20, activation='tanh'),
    Dense(1)
])
model.compile(optimizer='adam', loss='mse')
history = model.fit(x_train, y_train, validation_data=(x_val, y_val), epochs=300, verbose=0)

# 預測與評估
y_pred = model.predict(x)
mse = np.mean((y.flatten() - y_pred.flatten())**2)
max_err = np.max(np.abs(y.flatten() - y_pred.flatten()))

# 繪製圖形
plt.figure(figsize=(10,4))
plt.subplot(1,2,1)
plt.plot(x, y, label='True Function')
plt.plot(x, y_pred, '--', label='NN Prediction')
plt.legend(); plt.title('Runge: True vs Predict')

plt.subplot(1,2,2)
plt.plot(history.history['loss'], label='Train Loss')
plt.plot(history.history['val_loss'], label='Val Loss')
plt.yscale('log'); plt.legend(); plt.title('Loss Curve')
plt.tight_layout(); plt.show()

print(f"MSE: {mse:.5e}, Max Error: {max_err:.5e}")